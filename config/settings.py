"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 3.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
import socket
import os
from pathlib import Path
from environs import Env
from django.conf.urls.static import static
import mimetypes

# mimetypes.add_type("text/css", ".css", True)
# mimetypes.add_type("text/html", ".html", True)
# mimetypes.add_type("text/javascript", ".js", True)
# mimetypes.add_type("text/script", ".js", True)

env = Env()
env.read_env()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
print("BASE_DIR={}".format(BASE_DIR))
PROJECT_ROOT = os.path.normpath(os.path.dirname(__file__))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = '9j2p-v+e(wl7&de+3(73*$z0fv_&0_(7$-95(^obmd4v#mb_u3'
SECRET_KEY = env("DJANGO_SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True
DEBUG = False # env.bool("DJANGO_DEBUG", default=True)
VSCODE_DEBUGGER = False # env.bool("VSCODE_DEBUGGER", default=True)

ALLOWED_HOSTS = ['.herokuapp.com', 'localhost', '127.0.0.1', '0.0.0.0']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',

    # third party
    'django_extensions',
    'crispy_forms',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.github',
    'debug_toolbar',
    # 'template_debug',

    #local
    'accounts',
    'pages',
    'books',
]


MIDDLEWARE = [
    # 'django.middleware.cache.UpdateCacheMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    # 'django.middleware.cache.FetchFromCacheMiddleware',
]

# CACHE_MIDDLEWARE_ALIAS = 'default'
# CACHE_MIDDLEWARE_SECONDS = 604800
# CACHE_MIDDLEWARE_KEY_PREFIX = ''

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [str(BASE_DIR.joinpath('templates'))],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    "default": env.dj_db_url("DATABASE_URL", default="postgres://postgres@db/postgres")
    #'default': {
        # 'ENGINE': 'django.db.backends.sqlite3',
        # 'NAME': BASE_DIR / 'db.sqlite3',
        
        # 'ENGINE': 'django.db.backends.postgresql',
        # 'NAME': 'postgres',
        # 'USER': 'postgres',
        # 'PASSWORD': 'postgres',
        # 'HOST': 'db',
        # 'PORT': 5432,
    # }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

# django-crispy-forms
CRISPY_TEMPLATE_PACK = 'bootstrap4'

STATIC_URL = '/static/'

AUTH_USER_MODEL = 'accounts.CustomUser'

# LOGIN_REDIRECT_URL = 'home'
# LOGOUT_REDIRECT_URL = 'home'

STATICFILES_DIRS = [str(BASE_DIR / "static"),
                    # os.path.join(BASE_DIR, "staticfiles"),
                    # str(BASE_DIR.joinpath('static')),
]                  
# print("STATICFILES_DIRS={}".format(STATICFILES_DIRS))
STATIC_ROOT = str(BASE_DIR.joinpath('staticfiles'))
print("STATIC_ROOT={}".format(STATIC_ROOT))
# STATIC_ROOT = os.path.join(PROJECT_ROOT, 'static')
# STATICFILES_STORAGE = STATIC_ROOT # Path(__file__).resolve().parent.parent
# print("STATICFILES_STORAGE={}".format(STATICFILES_STORAGE))
STATICFILES_FINDERS = [
    "django.contrib.staticfiles.finders.FileSystemFinder",
    "django.contrib.staticfiles.finders.AppDirectoriesFinder",
]



# django-allauth config
LOGIN_REDIRECT_URL = 'home'
ACCOUNT_LOGOUT_REDIRECT = 'home'
SITE_ID = 1
AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',  # new
)
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
"""
And then to configure EMAIL_HOST, EMAIL_HOST_USER,
EMAIL_HOST_PASSWORD, EMAIL_PORT, and EMAIL_USE_TLS based on the
instructions from your email provider as environment variables.
"""

ACCOUNT_SESSION_REMEMBER = True
ACCOUNT_SIGNUP_PASSWORD_ENTER_TWICE = False

# django-allauth config

ACCOUNT_USERNAME_REQUIRED = False  # new
ACCOUNT_AUTHENTICATION_METHOD = 'email'  # new
ACCOUNT_EMAIL_REQUIRED = True  # new
ACCOUNT_UNIQUE_EMAIL = True  # new

DEFAULT_FROM_EMAIL = 'admin@djangobookstore.com'

TEMPLATE_DEBUG = True

MEDIA_URL = '/media/'
MEDIA_ROOT  = '/code/media' # str(BASE_DIR.joinpath('media'))
print("MEDIA_ROOT={}".format(MEDIA_ROOT))

# django-debug-toolbar
hostname, _, ips = socket.gethostbyname_ex(socket.gethostname())
INTERNAL_IPS = [ip[:-1] + "1" for ip in ips]


SECURE_SSL_REDIRECT = True # env.bool("DJANGO_SECURE_SSL_REDIRECT", default=True)
print("SECURE_SSL_REDIRECT={}".format(SECURE_SSL_REDIRECT))
# SECURE_HSTS_SECONDS = 0
# SECURE_HSTS_INCLUDE_SUBDOMAINS = False
# SECURE_HSTS_PRELOAD = False

SECURE_HSTS_SECONDS = env.int("DJANGO_SECURE_HSTS_SECONDS", default=2592000)
SECURE_HSTS_INCLUDE_SUBDOMAINS=env.bool("DJANGO_SECURE_HSTS_INCLUDE_SUBDOMAINS", default=True)
SECURE_HSTS_PRELOAD = env.bool("DJANGO_SECURE_HSTS_PRELOAD", default=True)
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
SESSION_COOKIE_SECURE = True #env.bool("DJANGO_SESSION_COOKIE_SECURE", default=True)
CSRF_COOKIE_SECURE = True # env.bool("DJANGO_CSRF_COOKIE_SECURE", default=True)

print("SESSION_COOKIE_SECURE={}".format(SESSION_COOKIE_SECURE))
print("CSRF_COOKIE_SECURE={}".format(CSRF_COOKIE_SECURE))





"""
command to run uwsgi 

uwsgi --http "0.0.0.0:8000" --module config.wsgi --master --processes 4 --threads 2 --static-map /static=/code/static --static-map /media=/code/media --offload-threads 2 --py-autoreload 10 --stats 127.0.0.1:8010

uwsgi --socket "0.0.0.0:8000" --chdir /code/ --wsgi-file config/wsgi.py --master --processes 4 --threads 2 --static-map /static=/code/static --static-map /media=/code/media --offload-threads 2 --py-autoreload 10 --stats 127.0.0.1:8010






openssl genrsa -out foobar.key 2048
openssl req -new -key foobar.key -out foobar.csr
openssl x509 -req -days 365 -in foobar.csr -signkey foobar.key -out foobar.crt

"""
